;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; A Test Game for a Math Package
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; nextの段階でテストを実行させる
; タスクの定義と実行を分離させる
; このままだとGDLが読み込まれないのはbase,init,legalに問題あり

(role robot)

; result for successor
(<= (base (result1 
            ?operation
            ?n
            ?result
            ?i3 ?i2 ?i1 ?i0
            ?o3 ?o2 ?o1 ?o0
            ?a3 ?a2 ?a1 ?a0))
    (operation ?operation)
    (i ?n)
    (num ?i3 ?i2 ?i1 ?i0)
    (num ?o3 ?o2 ?o1 ?o0)
    (num ?a3 ?a2 ?a1 ?a0)
    (result ?result))

; result for shift, conv_complement
(<= (base (result2
            ?operation
            ?n
            ?result
            ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0
            ?in
            ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0
            ?a15 ?a14 ?a13 ?a12 ?a11 ?a10 ?a9 ?a8 ?a7 ?a6 ?a5 ?a4 ?a3 ?a2 ?a1 ?a0))
    (operation ?operation)
    (i ?n)
    (num_b ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0)
    (i ?in)
    (num_b ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0)
    (num_b ?a15 ?a14 ?a13 ?a12 ?a11 ?a10 ?a9 ?a8 ?a7 ?a6 ?a5 ?a4 ?a3 ?a2 ?a1 ?a0)
    (result ?result))

; result for conv_radix
(<= (base (result3
            ?operation
            ?n
            ?result
            ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0
            ?o3 ?o2 ?o1 ?o0
            ?a3 ?a2 ?a1 ?a0))
    (operation ?operation)
    (i ?n)
    (num_b ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0)
    (num ?o3 ?o2 ?o1 ?o0)
    (num ?a3 ?a2 ?a1 ?a0)
    (result ?result))

; result for adder
(<= (base (result4
            ?operation
            ?n
            ?result
            ?i2 ?i1 ?i0
            ?o1 ?o0
            ?a1 ?a1))
    (operation ?operation)
    (i ?n)
    (binary ?i2)
    (binary ?i1)
    (binary ?i0)
    (binary ?o1)
    (binary ?o0)
    (binary ?a1)
    (binary ?a0)
    (result ?result))

; result for arithmetic operations
(<= (base (result5
            ?operation
            ?n
            ?result
            ?ia3 ?ia2 ?ia1 ?ia0
            ?ib3 ?ib2 ?ib1 ?ib0
            ?o3 ?o2 ?o1 ?o0
            ?ooverflow
            ?a3 ?a2 ?a1 ?a0
            ?aoverflow))
    (operation ?operation)
    (i ?n)
    (result ?result)
    (num ?ia3 ?ia2 ?ia1 ?ia0)
    (num ?ib3 ?ib2 ?ib1 ?ib0)
    (num ?o3 ?o2 ?o1 ?o0)
    (num ?a3 ?a2 ?a1 ?a0)
    (binary ?ooverflow)
    (binary ?aoverflow))

(base finished)

(<= (input robot (run ?operation))
    (operation ?operation))
(input robot quit)

(<= (init (result1 ?operation ?n waiting ?i3 ?i2 ?i1 ?i0 ?o3 ?o2 ?o1 ?o0 ?a3 ?a2 ?a1 ?a0))
    (tasks ?operation ?n)
    (num ?i3 ?i2 ?i1 ?i0)
    (num ?o3 ?o2 ?o1 ?o0)
    (num ?a3 ?a2 ?a1 ?a0))
(<= (init (result2 ?operation ?n waiting ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0 ?in ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0 ?a15 ?a14 ?a13 ?a12 ?a11 ?a10 ?a9 ?a8 ?a7 ?a6 ?a5 ?a4 ?a3 ?a2 ?a1 ?a0))
    (tasks ?operation ?n)
    (num_b ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0)
    (i ?in)
    (num_b ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0)
    (num_b ?a15 ?a14 ?a13 ?a12 ?a11 ?a10 ?a9 ?a8 ?a7 ?a6 ?a5 ?a4 ?a3 ?a2 ?a1 ?a0))
(<= (init (result3 ?operation ?n waiting ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0 ?o3 ?o2 ?o1 ?o0 ?a3 ?a2 ?a1 ?a0))
    (tasks ?operation ?n)
    (num_b ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0)
    (num ?o3 ?o2 ?o1 ?o0)
    (num ?a3 ?a2 ?a1 ?a0))
(<= (init (result4 ?operation ?n waiting ?i2 ?i1 ?i0 ?o1 ?o0 ?a1 ?a1))
    (tasks ?operation ?n)
    (binary ?i2)
    (binary ?i1)
    (binary ?i0)
    (binary ?o1)
    (binary ?o0)
    (binary ?a1)
    (binary ?a0))
(<= (init (result5 ?operation ?n waiting ?ia3 ?ia2 ?ia1 ?ia0 ?ib3 ?ib2 ?ib1 ?ib0 ?o3 ?o2 ?o1 ?o0 ?ooverflow ?a3 ?a2 ?a1 ?a0 ?aoverflow))
    (tasks ?operation ?n)
    (num ?ia3 ?ia2 ?ia1 ?ia0)
    (num ?ib3 ?ib2 ?ib1 ?ib0)
    (num ?o3 ?o2 ?o1 ?o0)
    (num ?a3 ?a2 ?a1 ?a0)
    (binary ?ooverflow)
    (binary ?aoverflow))

(<= (legal robot (run ?operation))
    (true (result1 ?operation ?n waiting ?i3 ?i2 ?i1 ?i0 ?o3 ?o2 ?o1 ?o0 ?a3 ?a2 ?a1 ?a0)))
(<= (legal robot (run ?operation))
    (true (result2 ?operation ?n waiting ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0 ?in ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0 ?a15 ?a14 ?a13 ?a12 ?a11 ?a10 ?a9 ?a8 ?a7 ?a6 ?a5 ?a4 ?a3 ?a2 ?a1 ?a0)))
(<= (legal robot (run ?operation))
    (true (result3 ?operation ?n waiting ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0 ?o3 ?o2 ?o1 ?o0 ?a3 ?a2 ?a1 ?a0)))
(<= (legal robot (run ?operation))
    (true (result4 ?operation ?n waiting ?i2 ?i1 ?i0 ?o1 ?o0 ?a1 ?a1)))
(<= (legal robot (run ?operation))
    (true (result5 ?operation ?n waiting ?ia3 ?ia2 ?ia1 ?ia0 ?ib3 ?ib2 ?ib1 ?ib0 ?o3 ?o2 ?o1 ?o0 ?ooverflow ?a3 ?a2 ?a1 ?a0 ?aoverflow)))
(<= (legal robot quit)
    (not running))

(<= (next (result1 ?operation ?n ?result ?i3 ?i2 ?i1 ?i0 ?o3 ?o2 ?o1 ?o0 ?a3 ?a2 ?a1 ?a0))
    (does robot (run ?operation))
    (task1 ?operation ?n ?i3 ?i2 ?i1 ?i0 ?o3 ?o2 ?o1 ?o0 ?a3 ?a2 ?a1 ?a0)
    (eq ?o3 ?o2 ?o1 ?o0 ?a3 ?a2 ?a1 ?a0 ?result))
(<= (next (result2 ?operation ?n ?result ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0 ?in ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0 ?a15 ?a14 ?a13 ?a12 ?a11 ?a10 ?a9 ?a8 ?a7 ?a6 ?a5 ?a4 ?a3 ?a2 ?a1 ?a0))
    (does robot (run ?operation))
    (task2 ?operation ?n ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0 ?in ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0 ?a15 ?a14 ?a13 ?a12 ?a11 ?a10 ?a9 ?a8 ?a7 ?a6 ?a5 ?a4 ?a3 ?a2 ?a1 ?a0)
    (eq_b ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0 ?a15 ?a14 ?a13 ?a12 ?a11 ?a10 ?a9 ?a8 ?a7 ?a6 ?a5 ?a4 ?a3 ?a2 ?a1 ?a0 ?result))
(<= (next (result3 ?operation ?n ?result ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0 ?o3 ?o2 ?o1 ?o0 ?a3 ?a2 ?a1 ?a0))
    (does robot (run ?operation))
    (task3 ?operation ?n ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0 ?o3 ?o2 ?o1 ?o0 ?a3 ?a2 ?a1 ?a0)
    (eq ?o3 ?o2 ?o1 ?o0 ?a3 ?a2 ?a1 ?a0 ?result))
(<= (next (result4 ?operation ?n ?result ?i2 ?i1 ?i0 ?o1 ?o0 ?a1 ?a1))
    (does robot (run ?operation))
    (task4 ?operation ?n ?i2 ?i1 ?i0 ?o1 ?o0 ?a1 ?a1)
    (_xor ?o1 ?a1 ?result1)
    (_xor ?o0 ?a0 ?result2)
    (_and ?result1 ?result2 ?result))
(<= (next (result5 ?operation ?n ?result ?ia3 ?ia2 ?ia1 ?ia0 ?ib3 ?ib2 ?ib1 ?ib0 ?o3 ?o2 ?o1 ?o0 ?ooverflow ?a3 ?a2 ?a1 ?a0 ?aoverflow))
    (does robot (run ?operation))
    (task5 ?operation ?n ?ia3 ?ia2 ?ia1 ?ia0 ?ib3 ?ib2 ?ib1 ?ib0 ?o3 ?o2 ?o1 ?o0 ?ooverflow ?a3 ?a2 ?a1 ?a0 ?aoverflow)
    (eq ?o3 ?o2 ?o1 ?o0 ?a3 ?a2 ?a1 ?a0 ?result1)
    (_xor ?ooverflow ?aoverflow ?result2)
    (_and ?result1 ?result2 ?result))

(<= (next finished)
    (does robot quit))
    
(<= terminal
    (true finished))

(<= (goal robot 100)
    (true (test ?name success)))

(<= (goal robot 0)
    (not (goal robot 100)))

;;; Tasks to test operations

(operation successor)
(operation shiftleft)
(operation shiftright)
(operation convert_radix)
(operation convert_complement)
(operation adder)
(operation plus)
(operation minus)
(operation multiply)
(operation divide)
(operation remainder)

(result i)
(result o)
(result waiting)

(<= (tasks ?operation ?i)
    (operation ?operation)
    (i ?i))

(<= (task1 successor 0
        1 0 1 0
        ?o3 ?o2 ?o1 ?o0
        1 0 1 1)
    (succ 1 0 1 0 ?o3 ?o2 ?o1 ?o0))
(<= (task1 successor 1
        1 0 1 f
        ?o3 ?o2 ?o1 ?o0
        1 0 2 0)
    (succ 1 0 1 f ?o3 ?o2 ?o1 ?o0))

;(<= (success num_b)
;    (num_b i o o i o i i o o i i o i o i o)
;    (num_b i i o o i o o i i i o i i o i i))

(<= (task2 shiftleft 0
        o i i o i i o o o i o i i i o o
        0
        ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0
        o i i o i i o o o i o i i i o o)
    (sl_b o i i o i i o o o i o i i i o o 0 ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0))

(<= (task2 shiftleft 1
        o i i o i i o o o i o i i i o o
        1
        ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0
        i i o i i o o o i o i i i o o o)
    (sl_b o i i o i i o o o i o i i i o o 1 ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0))

(<= (task2 shiftleft 2
        i o i o o o o i i o i o i o o i
        2
        ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0
        i o o o o i i o i o i o o i o o)
    (sl_b i o i o o o o i i o i o i o o i 2 ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0))

(<= (task2 shiftleft 3
        i o i o o o o i i o i o i o o i
        5
        ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0
        o o i i o i o i o o i o o o o o)
    (sl_b i o i o o o o i i o i o i o o i 5 ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0))

(<= (task2 shiftright 0
        o i i o i i o o o i o i i i o o
        0
        ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0
        o i i o i i o o o i o i i i o o)
    (sl_b o i i o i i o o o i o i i i o o 0 ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0))
(<= (task2 shiftright 1
        o i i o i i o o o i o i i i o o
        1
        ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0
        o o i i o i i o o o i o i i i o)
    (sl_b o i i o i i o o o i o i i i o o 1 ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0))
(<= (task2 shiftright 2
        i o i o o o o i i o i o i o o i
        2
        ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0
        o o i o i o o o o i i o i o i o)
    (sl_b i o i o o o o i i o i o i o o i 2 ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0))
(<= (task2 shiftright 3
        i o i o o o o i i o i o i o o i
        5
        ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0
        o o o o o i o i o o o o i i o i)
    (sl_b i o i o o o o i i o i o i o o i 5 ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0))

(<= (task3 convert_radix 0
        o i i o i i o o o i o i i i o o
        ?o3 ?o2 ?o1 ?o0
        6 c 5 c)
    (conv_radix o i i o i i o o o i o i i i o o ?o3 ?o2 ?o1 ?o0))

(<= (task3 convert_radix 1
        i o i o o o o i i o i o i o o i
        ?o3 ?o2 ?o1 ?o0
        a 1 a 9)
    (conv_radix i o i o o o o i i o i o i o o i ?o3 ?o2 ?o1 ?o0))

(<= (task2 convert_complement 0
        o o o o i i i o i i i i o i o o
        0
        ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0
        i i i i o o o i o o o o i i o o)
    (conv_complement o o o o i i i o i i i i o i o o ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0))
(<= (task2 convert_complement 1
        o o i o o i i i i i i o i o i i
        0
        ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0
        i i o i i o o o o o o i o i o i)
    (conv_complement o o i o o i i i i i i o i o i i ?o15 ?o14 ?o13 ?o12 ?o11 ?o10 ?o9 ?o8 ?o7 ?o6 ?o5 ?o4 ?o3 ?o2 ?o1 ?o0))

(<= (task4 adder 0
        o o o
        ?o1 ?o0
        o o)
    (adder o o o ?o1 ?o0))

(<= (task4 adder 1
        o i o
        ?o1 ?o0
        i o)
    (adder o i o ?o1 ?o0))

(<= (task4 adder 2
        i o o
        ?o1 ?o0
        i o)
    (adder i o o ?o1 ?o0))

(<= (task4 adder 3
        o i i
        ?o1 ?o0
        o i)
    (adder o i i ?o1 ?o0))

(<= (task4 adder 4
        i i i
        ?o1 ?o0
        i i)
    (adder i i i ?o1 ?o0))

;(<= (success adder)
;    (adder 0 0 0 0 0)
;    (adder 1 1 0 2 0)
;    (adder 1 f 0 0 1)
;    (adder 1 f f f 1)
;    (adder f f f d 2)
;    (not (adder 4 a 4 3 1))
;    (not (adder 1 k 0 0 1)))

(<= (success multiplier)
    (multiplier 0 0 0 0)
    (multiplier 1 1 0 1)
    (multiplier f 2 1 e)
    (multiplier f f e 1)
    (not (multiplier 4 a 8 b))
    (not (multiplier n 6 n 4)))

(<= (success lt)
    (lt 0 0 0 0 0 0 0 1)
    (lt 0 0 0 0 0 0 4 0)
    (not (lt 8 4 2 0 4 0 2 a)))

(<= (success plus)
    (plus 0 0 0 0 0 0 0 0 0 0 0 0 o)
    (plus f 2 8 4 0 2 c 5 f 5 4 9 o)
    (plus 0 0 0 0 f f f f f f f f o)
    (not (plus 2 5 6 3 3 4 0 4 5 3 2 0 o))
    (not (plus 2 f 8 g m 33 a 2 0 3 4 b o))
    (plus f 3 0 4 b a 2 0 a d 2 4 i))

(<= (success minus)
    (minus 0 0 0 0 0 0 0 0 0 0 0 0 o)
    (minus 0 f 0 1 0 e 0 1 0 1 0 0 o)
    (not (minus 2 4 8 3 1 9 b c 3 a f 0 i))
    (not (minus g a 3 0 j t 0 0 h b a c o))
    (minus 0 0 0 1 f f f f 0 0 0 2 i))

(<= (success multiplication)
    (mul 0 0 0 0 0 0 0 0 0 0 0 0)
    (mul 0 1 a 4 0 0 4 a 8 b e 8)
    (not (mul 2 5 2 8 0 0 3 a 8 b c e))
    (not (mul g a 7 0 3 b a k j j b c))
    (mul b 5 0 3 f 3 a a 0 c f e))

;;; General Functions

(<= running
    (true (test ?name waiting)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; A Common Package of Mathematics
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Notation
;;;    a.b = ?i1 ?i2 ... (Let (a ?i1 ?i2 ...))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Numbers: 0-65535
;;; - Hexadecimal 4 digit (16bit)
;;;    (num i.3 i.2 i.1 i.0) = i.0 * 2^4 + i.1 * 2^8 + i.2 * 2^12 + i.3 * 2^16
;;;    (num nan nan nan nan) = NaN (Not a number including overflow)
;;;    (minnum num.i) -> num.i == Zero
;;;    (maxnum num.i) -> num.i == 0xFFFF
;;;    (nan num.i) -> num.i == NaN
;;;
;;; Arithmetic Operations: + - * / %
;;;    (plus num.a num.b num.sum)     -> num.a + num.b = num.sum
;;;    (minus num.a num.b num.diff)   -> num.a - num.b = num.diff
;;;    (mul num.a num.b num.product)  -> num.a * num.b = num.product
;;;    (div num.a num.b num.quotient) -> num.a / num.b = num.quotient
;;;    (rem num.a num.b num.surplus)  -> num.a % num.b = num.surplus
;;;
;;; Comparison Operations: < > <= >= == !=
;;;    (lt num.a num.b) -> num.a < num.b
;;;    (gt num.a num.b) -> num.a > num.b
;;;    (le num.a num.b) -> num.a <= num.b
;;;    (ge num.a num.b) -> num.a >= num.b
;;;    (eq num.a num.b) -> num.a == num.b
;;;    (ne num.a num.b) -> num.a != num.b
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; Digits

;; Hex Digits
(i 0)
(i 1)
(i 2)
(i 3)
(i 4)
(i 5)
(i 6)
(i 7)
(i 8)
(i 9)
(i a)
(i b)
(i c)
(i d)
(i e)
(i f)

;; Binary Digits
(binary o)
(binary i)

;;; Numbers / NaN

;; Number (Hex)
(<= (num ?i3 ?i2 ?i1 ?i0)
    (i ?i0)
    (i ?i1)
    (i ?i2)
    (i ?i3))

;; NaN (Hex)
(num nan nan nan nan)

;; Number (Binary)
(<= (num_b ?b15 ?b14 ?b13 ?b12 ?b11 ?b10 ?b9 ?b8 ?b7 ?b6 ?b5 ?b4 ?b3 ?b2 ?b1 ?b0)
    (binary ?b15)
    (binary ?b14)
    (binary ?b13)
    (binary ?b12)
    (binary ?b11)
    (binary ?b10)
    (binary ?b9)
    (binary ?b8)
    (binary ?b7)
    (binary ?b6)
    (binary ?b5)
    (binary ?b4)
    (binary ?b3)
    (binary ?b2)
    (binary ?b1)
    (binary ?b0))

;;; Radix Table (binary <-> hex)

(radix_table o o o o 0)
(radix_table o o o i 1)
(radix_table o o i o 2)
(radix_table o o i i 3)
(radix_table o i o o 4)
(radix_table o i o i 5)
(radix_table o i i o 6)
(radix_table o i i i 7)
(radix_table i o o o 8)
(radix_table i o o i 9)
(radix_table i o i o a)
(radix_table i o i i b)
(radix_table i i o o c)
(radix_table i i o i d)
(radix_table i i i o e)
(radix_table i i i i f)

;;; Named Numbers

;; Zero (Hex)
(zero 0 0 0 0 i)
(<= (zero ?i3 ?i2 ?i1 ?i0 o)
    (num ?i3 ?i2 ?i1 ?i0)
    (not (zero ?i3 ?i2 ?i1 ?i0 i)))

;; Zero (Binary)
(zero_b o o o o o o o o o o o o o o o o i)
(<= (zero_b ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0 o)
    (num_b ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0)
    (not (zero_b ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0 i)))

;; NaN (Hex)
(nan nan nan nan nan)

;; Odd Number
(<= (odd_num ?i3 ?i2 ?i1 ?i0)
    (radix_table ?b3 ?b2 ?b1 i ?i0)
    (num ?i3 ?i2 ?i1 ?i0))

;; Even Number
(<= (even_num ?i3 ?i2 ?i1 ?i0)
    (radix_table ?b3 ?b2 ?b1 o ?i0)
    (num ?i3 ?i2 ?i1 ?i0))

;;; Successors

;; Digits

(succi 0 1)
(succi 1 2)
(succi 2 3)
(succi 3 4)
(succi 4 5)
(succi 5 6)
(succi 6 7)
(succi 7 8)
(succi 8 9)
(succi 9 a)
(succi a b)
(succi b c)
(succi c d)
(succi d e)
(succi e f)

;; Numbers

(<= (succ ?i3 ?i2 ?i1 ?i0 ?i3 ?i2 ?i1 ?j0)
    (num ?i3 ?i2 ?i1 ?i0)
    (num ?i3 ?i2 ?i1 ?j0)
    (succi ?i0 ?j0))
(<= (succ ?i3 ?i2 ?i1 f ?i3 ?i2 ?j1 0)
    (num ?i3 ?i2 ?i1 f)
    (num ?i3 ?i2 ?j1 0)
    (succi ?i1 ?j1))
(<= (succ ?i3 ?i2 f f ?i3 ?j2 0 0)
    (num ?i3 ?i2 f f)
    (num ?i3 ?j2 0 0)
    (succi ?i2 ?j2))
(<= (succ ?i3 f f f ?j3 0 0 0)
    (num ?i3 f f f)
    (num ?j3 0 0 0)
    (succi ?i3 ?j3))

;;; Logical Operations

(_or o o o)
(_or o i i)
(_or i o i)
(_or i i i)

(_and o o o)
(_and o i o)
(_and i o o)
(_and i i i)

(_not o i)
(_not i o)

(_nor o o i)
(_nor o i o)
(_nor i o o)
(_nor i i o)

(_nand o o i)
(_nand o i i)
(_nand i o i)
(_nand i i o)

(_xor o o o)
(_xor o i i)
(_xor i o i)
(_xor i i o)

;;; Converters

;; Radix (binary <-> hex)

(<= (conv_radix ?b15 ?b14 ?b13 ?b12 ?b11 ?b10 ?b9 ?b8 ?b7 ?b6 ?b5 ?b4 ?b3 ?b2 ?b1 ?b0 ?n3 ?n2 ?n1 ?n0)
    (radix_table ?b15 ?b14 ?b13 ?b12 ?n3)
    (radix_table ?b11 ?b10 ?b9 ?b8 ?n2)
    (radix_table ?b7 ?b6 ?b5 ?b4 ?n1)
    (radix_table ?b3 ?b2 ?b1 ?b0 ?n0))

;; Complement on two (Binary)

(<= (conv_complement ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0 ?j15 ?j14 ?j13 ?j12 ?j11 ?j10 ?j9 ?j8 ?j7 ?j6 ?j5 ?j4 ?j3 ?j2 ?j1 ?j0)
    (_not ?i15 ?ia15)
    (_not ?i14 ?ia14)
    (_not ?i13 ?ia13)
    (_not ?i12 ?ia12)
    (_not ?i11 ?ia11)
    (_not ?i10 ?ia10)
    (_not ?i9 ?ia9)
    (_not ?i8 ?ia8)
    (_not ?i7 ?ia7)
    (_not ?i6 ?ia6)
    (_not ?i5 ?ia5)
    (_not ?i4 ?ia4)
    (_not ?i3 ?ia3)
    (_not ?i2 ?ia2)
    (_not ?i1 ?ia1)
    (_not ?i0 ?ia0)
    (plus_b ?ia15 ?ia14 ?ia13 ?ia12 ?ia11 ?ia10 ?ia9 ?ia8 ?ia7 ?ia6 ?ia5 ?ia4 ?ia3 ?ia2 ?ia1 ?ia0 o o o o o o o o o o o o o o o i o ?j15 ?j14 ?j13 ?j12 ?j11 ?j10 ?j9 ?j8 ?j7 ?j6 ?j5 ?j4 ?j3 ?j2 ?j1 ?j0 ?overflow))

;;; Shift Operations

;; Logical Right-Shift (Binary)
(<= (sr_b ?b15 ?b14 ?b13 ?b12 ?b11 ?b10 ?b9 ?b8 ?b7 ?b6 ?b5 ?b4 ?b3 ?b2 ?b1 ?b0 0 ?b15 ?b14 ?b13 ?b12 ?b11 ?b10 ?b9 ?b8 ?b7 ?b6 ?b5 ?b4 ?b3 ?b2 ?b1 ?b0)
    (num_b ?b15 ?b14 ?b13 ?b12 ?b11 ?b10 ?b9 ?b8 ?b7 ?b6 ?b5 ?b4 ?b3 ?b2 ?b1 ?b0))
(<= (sr_b ?a15 ?a14 ?a13 ?a12 ?a11 ?a10 ?a9 ?a8 ?a7 ?a6 ?a5 ?a4 ?a3 ?a2 ?a1 ?a0 ?n ?b15 ?b14 ?b13 ?b12 ?b11 ?b10 ?b9 ?b8 ?b7 ?b6 ?b5 ?b4 ?b3 ?b2 ?b1 ?b0)
    (binary ?a0)
    (succi ?nm ?n)
    (sr_b o ?a15 ?a14 ?a13 ?a12 ?a11 ?a10 ?a9 ?a8 ?a7 ?a6 ?a5 ?a4 ?a3 ?a2 ?a1 ?nm ?b15 ?b14 ?b13 ?b12 ?b11 ?b10 ?b9 ?b8 ?b7 ?b6 ?b5 ?b4 ?b3 ?b2 ?b1 ?b0))

;; Logical Right-Shift (Hex)
(<= (sr ?i3 ?i2 ?i1 ?i0 ?n ?j3 ?j2 ?j1 ?j0)
    (conv_radix ?ib15 ?ib14 ?ib13 ?ib12 ?ib11 ?ib10 ?ib9 ?ib8 ?ib7 ?ib6 ?ib5 ?ib4 ?ib3 ?ib2 ?ib1 ?ib0 ?i3 ?i2 ?i1 ?i0)
    (conv_radix ?jb15 ?jb14 ?jb13 ?jb12 ?jb11 ?jb10 ?jb9 ?jb8 ?jb7 ?jb6 ?jb5 ?jb4 ?jb3 ?jb2 ?jb1 ?jb0 ?j3 ?j2 ?j1 ?j0)
    (sr_b ?ib15 ?ib14 ?ib13 ?ib12 ?ib11 ?ib10 ?ib9 ?ib8 ?ib7 ?ib6 ?ib5 ?ib4 ?ib3 ?ib2 ?ib1 ?ib0 ?n ?jb15 ?jb14 ?jb13 ?jb12 ?jb11 ?jb10 ?jb9 ?jb8 ?jb7 ?jb6 ?jb5 ?jb4 ?jb3 ?jb2 ?jb1 ?jb0))

;; Logical Left-Shift (Binary)
(<= (sl_b ?b15 ?b14 ?b13 ?b12 ?b11 ?b10 ?b9 ?b8 ?b7 ?b6 ?b5 ?b4 ?b3 ?b2 ?b1 ?b0 0 ?b15 ?b14 ?b13 ?b12 ?b11 ?b10 ?b9 ?b8 ?b7 ?b6 ?b5 ?b4 ?b3 ?b2 ?b1 ?b0)
    (num_b ?b15 ?b14 ?b13 ?b12 ?b11 ?b10 ?b9 ?b8 ?b7 ?b6 ?b5 ?b4 ?b3 ?b2 ?b1 ?b0))
(<= (sl_b ?a15 ?a14 ?a13 ?a12 ?a11 ?a10 ?a9 ?a8 ?a7 ?a6 ?a5 ?a4 ?a3 ?a2 ?a1 ?a0 ?n ?b15 ?b14 ?b13 ?b12 ?b11 ?b10 ?b9 ?b8 ?b7 ?b6 ?b5 ?b4 ?b3 ?b2 ?b1 ?b0)
    (succi ?nm ?n)
    (binary ?a15)
    (sl_b ?a14 ?a13 ?a12 ?a11 ?a10 ?a9 ?a8 ?a7 ?a6 ?a5 ?a4 ?a3 ?a2 ?a1 ?a0 o ?nm ?b15 ?b14 ?b13 ?b12 ?b11 ?b10 ?b9 ?b8 ?b7 ?b6 ?b5 ?b4 ?b3 ?b2 ?b1 ?b0))

;; Logical Left-Shift (Hex)
(<= (sl ?i3 ?i2 ?i1 ?i0 ?n ?j3 ?j2 ?j1 ?j0)
    (conv_radix ?ib15 ?ib14 ?ib13 ?ib12 ?ib11 ?ib10 ?ib9 ?ib8 ?ib7 ?ib6 ?ib5 ?ib4 ?ib3 ?ib2 ?ib1 ?ib0 ?i3 ?i2 ?i1 ?i0)
    (conv_radix ?jb15 ?jb14 ?jb13 ?jb12 ?jb11 ?jb10 ?jb9 ?jb8 ?jb7 ?jb6 ?jb5 ?jb4 ?jb3 ?jb2 ?jb1 ?jb0 ?j3 ?j2 ?j1 ?j0)
    (sl_b ?ib15 ?ib14 ?ib13 ?ib12 ?ib11 ?ib10 ?ib9 ?ib8 ?ib7 ?ib6 ?ib5 ?ib4 ?ib3 ?ib2 ?ib1 ?ib0 ?n ?jb15 ?jb14 ?jb13 ?jb12 ?jb11 ?jb10 ?jb9 ?jb8 ?jb7 ?jb6 ?jb5 ?jb4 ?jb3 ?jb2 ?jb1 ?jb0))

;;; Full Adder (Binary)
; (adder ?a ?b ?x ?s ?c) -> ?a + ?b + ?x = ?c?s
; ?a: input A | ?b: input B | ?x: carry-input | ?s: sum-output | ?c: carry-output

(<= (adder ?a ?b ?x ?s ?c)
    (_xor ?a ?b ?s1)
    (_xor ?s1 ?x ?s)
    (_and ?a ?b ?c1)
    (_and ?s1 ?x ?c2)
    (_or ?c1 ?c2 ?c))

;;; Comparator
; (comparator ?i ?j) -> (?i < ?j)

(<= (comparator ?i ?j)
    (succi ?i ?j))
(<= (comparator ?h ?j)
    (succi ?i ?j)
    (comparator ?h ?i))

;;; Comparison Operations

;; i < j
(<= (lt ?i3 ?i2 ?i1 ?i0 ?j3 ?j2 ?j1 ?j0)
    (comparator ?i3 ?j3)
    (num ?i3 ?i2 ?i1 ?i0)
    (num ?j3 ?j2 ?j1 ?j0))
(<= (lt ?i3 ?i2 ?i1 ?i0 ?i3 ?j2 ?j1 ?j0)
    (comparator ?i2 ?j2)
    (num ?i3 ?i2 ?i1 ?i0)
    (num ?i3 ?j2 ?j1 ?j0))
(<= (lt ?i3 ?i2 ?i1 ?i0 ?i3 ?i2 ?j1 ?j0)
    (comparator ?i1 ?j1)
    (num ?i3 ?i2 ?i1 ?i0)
    (num ?i3 ?i2 ?j1 ?j0))
(<= (lt ?i3 ?i2 ?i1 ?i0 ?i3 ?i2 ?i1 ?j0)
    (comparator ?i0 ?j0)
    (num ?i3 ?i2 ?i1 ?i0)
    (num ?i3 ?i2 ?i1 ?j0))

;; i <= j
(<= (le ?i3 ?i2 ?i1 ?i0 ?j3 ?j2 ?j1 ?j0)
    (lt ?i3 ?i2 ?i1 ?i0 ?j3 ?j2 ?j1 ?j0))
(<= (le ?i3 ?i2 ?i1 ?i0 ?i3 ?i2 ?i1 ?i0)
    (num ?i3 ?i2 ?i1 ?i0))

;; i > j
(<= (gt ?i3 ?i2 ?i1 ?i0 ?j3 ?j2 ?j1 ?j0)
    (lt ?j3 ?j2 ?j1 ?j0 ?i3 ?i2 ?i1 ?i0))

;; i >= j
(<= (ge ?i3 ?i2 ?i1 ?i0 ?j3 ?j2 ?j1 ?j0)
    (gt ?j3 ?j2 ?j1 ?j0 ?i3 ?i2 ?i1 ?i0))

;; i == j
(<= (eq ?i3 ?i2 ?i1 ?i0 ?i3 ?i2 ?i1 ?i0 i)
    (num ?i3 ?i2 ?i1 ?i0))
(<= (eq ?i3 ?i2 ?i1 ?i0 ?j3 ?j2 ?j1 ?j0 o)
    (not (eq ?i3 ?i2 ?i1 ?i0 ?j3 ?j2 ?j1 ?j0 i))
    (num ?i3 ?i2 ?i1 ?i0)
    (num ?j3 ?j2 ?j1 ?j0))

(<= (eq_b
        ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0
        ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0
        i)
    (num_b ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0))
(<= (eq_b
        ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0
        ?j15 ?j14 ?j13 ?j12 ?j11 ?j10 ?j9 ?j8 ?j7 ?j6 ?j5 ?j4 ?j3 ?j2 ?j1 ?j0
        o)
    (not (eq_b
        ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0
        ?j15 ?j14 ?j13 ?j12 ?j11 ?j10 ?j9 ?j8 ?j7 ?j6 ?j5 ?j4 ?j3 ?j2 ?j1 ?j0
        i))
    (num_b ?i15 ?i14 ?i13 ?i12 ?i11 ?i10 ?i9 ?i8 ?i7 ?i6 ?i5 ?i4 ?i3 ?i2 ?i1 ?i0)
    (num_b ?j15 ?j14 ?j13 ?j12 ?j11 ?j10 ?j9 ?j8 ?j7 ?j6 ?j5 ?j4 ?j3 ?j2 ?j1 ?j0))

;;; Arithmetic Operations

;; Addition
; i + j = s
; (?overflow == i) -> sum overflows

; Hex
(<= (plus
        ?i3 ?i2 ?i1 ?i0
        ?j3 ?j2 ?j1 ?j0
        ?s3 ?s2 ?s1 ?s0
        ?overflow)
    (plus_ ?i3 ?i2 ?i1 ?i0 ?j3 ?j2 ?j1 ?j0 o ?s3 ?s2 ?s1 ?s0 ?overflow))

; Hex with carry-input
(<= (plus_
        ?i3 ?i2 ?i1 ?i0
        ?j3 ?j2 ?j1 ?j0
        ?cb0
        ?s3 ?s2 ?s1 ?s0
        ?overflow)
    (conv_radix ?ib15 ?ib14 ?ib13 ?ib12 ?ib11 ?ib10 ?ib9 ?ib8 ?ib7 ?ib6 ?ib5 ?ib4 ?ib3 ?ib2 ?ib1 ?ib0 ?i3 ?i2 ?i1 ?i0)
    (conv_radix ?jb15 ?jb14 ?jb13 ?jb12 ?jb11 ?jb10 ?jb9 ?jb8 ?jb7 ?jb6 ?jb5 ?jb4 ?jb3 ?jb2 ?jb1 ?jb0 ?j3 ?j2 ?j1 ?j0)
    (conv_radix ?sb15 ?sb14 ?sb13 ?sb12 ?sb11 ?sb10 ?sb9 ?sb8 ?sb7 ?sb6 ?sb5 ?sb4 ?sb3 ?sb2 ?sb1 ?sb0 ?s3 ?s2 ?s1 ?s0)
    (plus_b ?ib15 ?ib14 ?ib13 ?ib12 ?ib11 ?ib10 ?ib9 ?ib8 ?ib7 ?ib6 ?ib5 ?ib4 ?ib3 ?ib2 ?ib1 ?ib0 ?jb15 ?jb14 ?jb13 ?jb12 ?jb11 ?jb10 ?jb9 ?jb8 ?jb7 ?jb6 ?jb5 ?jb4 ?jb3 ?jb2 ?jb1 ?jb0 ?cb0 ?sb15 ?sb14 ?sb13 ?sb12 ?sb11 ?sb10 ?sb9 ?sb8 ?sb7 ?sb6 ?sb5 ?sb4 ?sb3 ?sb2 ?sb1 ?sb0 ?overflow))

; Binary with carry-input
(<= (plus_b
        ?ib15 ?ib14 ?ib13 ?ib12 ?ib11 ?ib10 ?ib9 ?ib8 ?ib7 ?ib6 ?ib5 ?ib4 ?ib3 ?ib2 ?ib1 ?ib0 
        ?jb15 ?jb14 ?jb13 ?jb12 ?jb11 ?jb10 ?jb9 ?jb8 ?jb7 ?jb6 ?jb5 ?jb4 ?jb3 ?jb2 ?jb1 ?jb0
        ?cb0
        ?sb15 ?sb14 ?sb13 ?sb12 ?sb11 ?sb10 ?sb9 ?sb8 ?sb7 ?sb6 ?sb5 ?sb4 ?sb3 ?sb2 ?sb1 ?sb0
        ?overflow)
    (adder ?ib0 ?jb0 ?cb0 ?sb0 ?cb1)
    (adder ?ib1 ?jb1 ?cb1 ?sb1 ?cb2)
    (adder ?ib2 ?jb2 ?cb2 ?sb2 ?cb3)
    (adder ?ib3 ?jb3 ?cb3 ?sb3 ?cb4)
    (adder ?ib4 ?jb4 ?cb4 ?sb4 ?cb5)
    (adder ?ib5 ?jb5 ?cb5 ?sb5 ?cb6)
    (adder ?ib6 ?jb6 ?cb6 ?sb6 ?cb7)
    (adder ?ib7 ?jb7 ?cb7 ?sb7 ?cb8)
    (adder ?ib8 ?jb8 ?cb8 ?sb8 ?cb9)
    (adder ?ib9 ?jb9 ?cb9 ?sb9 ?cb10)
    (adder ?ib10 ?jb10 ?cb10 ?sb10 ?cb11)
    (adder ?ib11 ?jb11 ?cb11 ?sb11 ?cb12)
    (adder ?ib12 ?jb12 ?cb12 ?sb12 ?cb13)
    (adder ?ib13 ?jb13 ?cb13 ?sb13 ?cb14)
    (adder ?ib14 ?jb14 ?cb14 ?sb14 ?cb15)
    (adder ?ib15 ?jb15 ?cb15 ?sb15 ?overflow))

;(<= (plus ?i3 ?i2 ?i1 ?i0 ?j3 ?j2 ?j1 ?j0 ?s3 ?s2 ?s1 ?s0)
;    (adder ?i0 ?j0 0 ?s0 ?c0)
;    (adder ?i1 ?j1 ?c0 ?s1 ?c1)
;    (adder ?i2 ?j2 ?c1 ?s2 ?c2)
;    (adder ?i3 ?j3 ?c2 ?s3 0))
;(<= (plus ?i3 ?i2 ?i1 ?i0 ?j3 ?j2 ?j1 ?j0 nan nan nan nan)
;    (adder ?i0 ?j0 0 ?s0 ?c0)
;    (adder ?i1 ?j1 ?c0 ?s1 ?c1)
;    (adder ?i2 ?j2 ?c1 ?s2 ?c2)
;    (adder ?i3 ?j3 ?c2 ?s3 ?c3)
;    (distinct c3 0))
;(<= (plus ?i3 ?i2 ?i1 ?i0 nan nan nan nan nan nan nan nan)
;    (num ?i3 ?i2 ?i1 ?i0))
;(<= (plus nan nan nan nan ?j3 ?j2 ?j1 ?j0 nan nan nan nan)
;    (num ?j3 ?j2 ?j1 ?j0))

;; Subtraction
; i - j = s
; (?overflow == i) -> the difference overflows

; Hex
(<= (minus
        ?i3 ?i2 ?i1 ?i0
        ?j3 ?j2 ?j1 ?j0
        ?d3 ?d2 ?d1 ?d0
        ?overflow)
    (plus ?j3 ?j2 ?j1 ?j0 ?d3 ?d2 ?d1 ?d0 ?i3 ?i2 ?i1 ?i0 ?overflow))

;;; ここまでテスト済み

;; Multiplication
; i * j = s
; (?overflow == i) -> the product overflows

(<= (mul
        ?i3 ?i2 ?i1 ?i0
        ?j3 ?j2 ?j1 ?j0
        ?p3 ?p2 ?p1 ?p0)
    (conv_radix ?i15_b ?i14_b ?i13_b ?i12_b ?i11_b ?i10_b ?i9_b ?i8_b ?i7_b ?i6_b ?i5_b ?i4_b ?i3_b ?i2_b ?i1_b ?i0_b ?i3 ?i2 ?i1 ?i0)
    (conv_radix ?j15_b ?j14_b ?j13_b ?j12_b ?j11_b ?j10_b ?j9_b ?j8_b ?j7_b ?j6_b ?j5_b ?j4_b ?j3_b ?j2_b ?j1_b ?j0_b ?j3 ?j2 ?j1 ?j0)
    (conv_complement
        ?i15_b ?i14_b ?i13_b ?i12_b ?i11_b ?i10_b ?i9_b ?i8_b ?i7_b ?i6_b ?i5_b ?i4_b ?i3_b ?i2_b ?i1_b ?i0_b
        ?ia15_b ?ia14_b ?ia13_b ?ia12_b ?ia11_b ?ia10_b ?ia9_b ?ia8_b ?ia7_b ?ia6_b ?ia5_b ?ia4_b ?ia3_b ?ia2_b ?ia1_b ?ia0_b)
    ;(booth_2
    ;    ?i15_b ?i14_b ?i13_b ?i12_b ?i11_b ?i10_b ?i9_b ?i8_b ?i7_b ?i6_b ?i5_b ?i4_b ?i3_b ?i2_b ?i1_b ?i0_b
    ;    ?ia15_b ?ia14_b ?ia13_b ?ia12_b ?ia11_b ?ia10_b ?ia9_b ?ia8_b ?ia7_b ?ia6_b ?ia5_b ?ia4_b ?ia3_b ?ia2_b ?ia1_b ?ia0_b
    ;    o o o o o o o o o o o o o o o o ?j15_b ?j14_b ?j13_b ?j12_b ?j11_b ?j10_b ?j9_b ?j8_b ?j7_b ?j6_b ?j5_b ?j4_b ?j3_b ?j2_b ?j1_b ?j0_b o
    ;    f
    ;    ?p32_b ?p31_b ?p30_b ?p29_b ?p28_b ?p27_b ?p26_b ?p25_b ?p24_b ?p23_b ?p22_b ?p21_b ?p20_b ?p19_b ?p18_b ?p17_b ?p16_b ?p15_b ?p14_b ?p13_b ?p12_b ?p11_b ?p10_b ?p9_b ?p8_b ?p7_b ?p6_b ?p5_b ?p4_b ?p3_b ?p2_b ?p1_b ?p0_b)
    (booth_1
        ?i15_b ?i14_b ?i13_b ?i12_b ?i11_b ?i10_b ?i9_b ?i8_b ?i7_b ?i6_b ?i5_b ?i4_b ?i3_b ?i2_b ?i1_b ?i0_b
        ?ia15_b ?ia14_b ?ia13_b ?ia12_b ?ia11_b ?ia10_b ?ia9_b ?ia8_b ?ia7_b ?ia6_b ?ia5_b ?ia4_b ?ia3_b ?ia2_b ?ia1_b ?ia0_b
        o o o o o o o o o o o o o o o o ?j15_b ?j14_b ?j13_b ?j12_b ?j11_b ?j10_b ?j9_b ?j8_b ?j7_b ?j6_b ?j5_b ?j4_b ?j3_b ?j2_b ?j1_b ?j0_b o
        ?p032_b ?p031_b ?p030_b ?p029_b ?p028_b ?p027_b ?p026_b ?p025_b ?p024_b ?p023_b ?p022_b ?p021_b ?p020_b ?p019_b ?p018_b ?p017_b ?p016_b ?p015_b ?p014_b ?p013_b ?p012_b ?p011_b ?p010_b ?p09_b ?p08_b ?p07_b ?p06_b ?p05_b ?p04_b ?p03_b ?p02_b ?p01_b ?p00_b)
    (booth_1
        ?i15_b ?i14_b ?i13_b ?i12_b ?i11_b ?i10_b ?i9_b ?i8_b ?i7_b ?i6_b ?i5_b ?i4_b ?i3_b ?i2_b ?i1_b ?i0_b
        ?ia15_b ?ia14_b ?ia13_b ?ia12_b ?ia11_b ?ia10_b ?ia9_b ?ia8_b ?ia7_b ?ia6_b ?ia5_b ?ia4_b ?ia3_b ?ia2_b ?ia1_b ?ia0_b
        ?p032_b ?p032_b ?p031_b ?p030_b ?p029_b ?p028_b ?p027_b ?p026_b ?p025_b ?p024_b ?p023_b ?p022_b ?p021_b ?p020_b ?p019_b ?p018_b ?p017_b ?p016_b ?p015_b ?p014_b ?p013_b ?p012_b ?p011_b ?p010_b ?p09_b ?p08_b ?p07_b ?p06_b ?p05_b ?p04_b ?p03_b ?p02_b ?p01_b
        ?p132_b ?p131_b ?p130_b ?p129_b ?p128_b ?p127_b ?p126_b ?p125_b ?p124_b ?p123_b ?p122_b ?p121_b ?p120_b ?p119_b ?p118_b ?p117_b ?p116_b ?p115_b ?p114_b ?p113_b ?p112_b ?p111_b ?p110_b ?p19_b ?p18_b ?p17_b ?p16_b ?p15_b ?p14_b ?p13_b ?p12_b ?p11_b ?p10_b)
    (booth_1
        ?i15_b ?i14_b ?i13_b ?i12_b ?i11_b ?i10_b ?i9_b ?i8_b ?i7_b ?i6_b ?i5_b ?i4_b ?i3_b ?i2_b ?i1_b ?i0_b
        ?ia15_b ?ia14_b ?ia13_b ?ia12_b ?ia11_b ?ia10_b ?ia9_b ?ia8_b ?ia7_b ?ia6_b ?ia5_b ?ia4_b ?ia3_b ?ia2_b ?ia1_b ?ia0_b
        ?p132_b ?p132_b ?p131_b ?p130_b ?p129_b ?p128_b ?p127_b ?p126_b ?p125_b ?p124_b ?p123_b ?p122_b ?p121_b ?p120_b ?p119_b ?p118_b ?p117_b ?p116_b ?p115_b ?p114_b ?p113_b ?p112_b ?p111_b ?p110_b ?p19_b ?p18_b ?p17_b ?p16_b ?p15_b ?p14_b ?p13_b ?p12_b ?p11_b
        ?p232_b ?p231_b ?p230_b ?p229_b ?p228_b ?p227_b ?p226_b ?p225_b ?p224_b ?p223_b ?p222_b ?p221_b ?p220_b ?p219_b ?p218_b ?p217_b ?p216_b ?p215_b ?p214_b ?p213_b ?p212_b ?p211_b ?p210_b ?p29_b ?p28_b ?p27_b ?p26_b ?p25_b ?p24_b ?p23_b ?p22_b ?p21_b ?p20_b)
    (booth_1
        ?i15_b ?i14_b ?i13_b ?i12_b ?i11_b ?i10_b ?i9_b ?i8_b ?i7_b ?i6_b ?i5_b ?i4_b ?i3_b ?i2_b ?i1_b ?i0_b
        ?ia15_b ?ia14_b ?ia13_b ?ia12_b ?ia11_b ?ia10_b ?ia9_b ?ia8_b ?ia7_b ?ia6_b ?ia5_b ?ia4_b ?ia3_b ?ia2_b ?ia1_b ?ia0_b
        ?p232_b ?p232_b ?p231_b ?p230_b ?p229_b ?p228_b ?p227_b ?p226_b ?p225_b ?p224_b ?p223_b ?p222_b ?p221_b ?p220_b ?p219_b ?p218_b ?p217_b ?p216_b ?p215_b ?p214_b ?p213_b ?p212_b ?p211_b ?p210_b ?p29_b ?p28_b ?p27_b ?p26_b ?p25_b ?p24_b ?p23_b ?p22_b ?p21_b
        ?p332_b ?p331_b ?p330_b ?p329_b ?p328_b ?p327_b ?p326_b ?p325_b ?p324_b ?p323_b ?p322_b ?p321_b ?p320_b ?p319_b ?p318_b ?p317_b ?p316_b ?p315_b ?p314_b ?p313_b ?p312_b ?p311_b ?p310_b ?p39_b ?p38_b ?p37_b ?p36_b ?p35_b ?p34_b ?p33_b ?p32_b ?p31_b ?p30_b)
    (booth_1
        ?i15_b ?i14_b ?i13_b ?i12_b ?i11_b ?i10_b ?i9_b ?i8_b ?i7_b ?i6_b ?i5_b ?i4_b ?i3_b ?i2_b ?i1_b ?i0_b
        ?ia15_b ?ia14_b ?ia13_b ?ia12_b ?ia11_b ?ia10_b ?ia9_b ?ia8_b ?ia7_b ?ia6_b ?ia5_b ?ia4_b ?ia3_b ?ia2_b ?ia1_b ?ia0_b
        ?p332_b ?p332_b ?p331_b ?p330_b ?p329_b ?p328_b ?p327_b ?p326_b ?p325_b ?p324_b ?p323_b ?p322_b ?p321_b ?p320_b ?p319_b ?p318_b ?p317_b ?p316_b ?p315_b ?p314_b ?p313_b ?p312_b ?p311_b ?p310_b ?p39_b ?p38_b ?p37_b ?p36_b ?p35_b ?p34_b ?p33_b ?p32_b ?p31_b
        ?p432_b ?p431_b ?p430_b ?p429_b ?p428_b ?p427_b ?p426_b ?p425_b ?p424_b ?p423_b ?p422_b ?p421_b ?p420_b ?p419_b ?p418_b ?p417_b ?p416_b ?p415_b ?p414_b ?p413_b ?p412_b ?p411_b ?p410_b ?p49_b ?p48_b ?p47_b ?p46_b ?p45_b ?p44_b ?p43_b ?p42_b ?p41_b ?p40_b)
    (booth_1
        ?i15_b ?i14_b ?i13_b ?i12_b ?i11_b ?i10_b ?i9_b ?i8_b ?i7_b ?i6_b ?i5_b ?i4_b ?i3_b ?i2_b ?i1_b ?i0_b
        ?ia15_b ?ia14_b ?ia13_b ?ia12_b ?ia11_b ?ia10_b ?ia9_b ?ia8_b ?ia7_b ?ia6_b ?ia5_b ?ia4_b ?ia3_b ?ia2_b ?ia1_b ?ia0_b
        ?p432_b ?p432_b ?p431_b ?p430_b ?p429_b ?p428_b ?p427_b ?p426_b ?p425_b ?p424_b ?p423_b ?p422_b ?p421_b ?p420_b ?p419_b ?p418_b ?p417_b ?p416_b ?p415_b ?p414_b ?p413_b ?p412_b ?p411_b ?p410_b ?p49_b ?p48_b ?p47_b ?p46_b ?p45_b ?p44_b ?p43_b ?p42_b ?p41_b
        ?p532_b ?p531_b ?p530_b ?p529_b ?p528_b ?p527_b ?p526_b ?p525_b ?p524_b ?p523_b ?p522_b ?p521_b ?p520_b ?p519_b ?p518_b ?p517_b ?p516_b ?p515_b ?p514_b ?p513_b ?p512_b ?p511_b ?p510_b ?p59_b ?p58_b ?p57_b ?p56_b ?p55_b ?p54_b ?p53_b ?p52_b ?p51_b ?p50_b)
    (booth_1
        ?i15_b ?i14_b ?i13_b ?i12_b ?i11_b ?i10_b ?i9_b ?i8_b ?i7_b ?i6_b ?i5_b ?i4_b ?i3_b ?i2_b ?i1_b ?i0_b
        ?ia15_b ?ia14_b ?ia13_b ?ia12_b ?ia11_b ?ia10_b ?ia9_b ?ia8_b ?ia7_b ?ia6_b ?ia5_b ?ia4_b ?ia3_b ?ia2_b ?ia1_b ?ia0_b
        ?p532_b ?p532_b ?p531_b ?p530_b ?p529_b ?p528_b ?p527_b ?p526_b ?p525_b ?p524_b ?p523_b ?p522_b ?p521_b ?p520_b ?p519_b ?p518_b ?p517_b ?p516_b ?p515_b ?p514_b ?p513_b ?p512_b ?p511_b ?p510_b ?p59_b ?p58_b ?p57_b ?p56_b ?p55_b ?p54_b ?p53_b ?p52_b ?p51_b
        ?p632_b ?p631_b ?p630_b ?p629_b ?p628_b ?p627_b ?p626_b ?p625_b ?p624_b ?p623_b ?p622_b ?p621_b ?p620_b ?p619_b ?p618_b ?p617_b ?p616_b ?p615_b ?p614_b ?p613_b ?p612_b ?p611_b ?p610_b ?p69_b ?p68_b ?p67_b ?p66_b ?p65_b ?p64_b ?p63_b ?p62_b ?p61_b ?p60_b)
    (booth_1
        ?i15_b ?i14_b ?i13_b ?i12_b ?i11_b ?i10_b ?i9_b ?i8_b ?i7_b ?i6_b ?i5_b ?i4_b ?i3_b ?i2_b ?i1_b ?i0_b
        ?ia15_b ?ia14_b ?ia13_b ?ia12_b ?ia11_b ?ia10_b ?ia9_b ?ia8_b ?ia7_b ?ia6_b ?ia5_b ?ia4_b ?ia3_b ?ia2_b ?ia1_b ?ia0_b
        ?p632_b ?p632_b ?p631_b ?p630_b ?p629_b ?p628_b ?p627_b ?p626_b ?p625_b ?p624_b ?p623_b ?p622_b ?p621_b ?p620_b ?p619_b ?p618_b ?p617_b ?p616_b ?p615_b ?p614_b ?p613_b ?p612_b ?p611_b ?p610_b ?p69_b ?p68_b ?p67_b ?p66_b ?p65_b ?p64_b ?p63_b ?p62_b ?p61_b
        ?p732_b ?p731_b ?p730_b ?p729_b ?p728_b ?p727_b ?p726_b ?p725_b ?p724_b ?p723_b ?p722_b ?p721_b ?p720_b ?p719_b ?p718_b ?p717_b ?p716_b ?p715_b ?p714_b ?p713_b ?p712_b ?p711_b ?p710_b ?p79_b ?p78_b ?p77_b ?p76_b ?p75_b ?p74_b ?p73_b ?p72_b ?p71_b ?p70_b)
    (booth_1
        ?i15_b ?i14_b ?i13_b ?i12_b ?i11_b ?i10_b ?i9_b ?i8_b ?i7_b ?i6_b ?i5_b ?i4_b ?i3_b ?i2_b ?i1_b ?i0_b
        ?ia15_b ?ia14_b ?ia13_b ?ia12_b ?ia11_b ?ia10_b ?ia9_b ?ia8_b ?ia7_b ?ia6_b ?ia5_b ?ia4_b ?ia3_b ?ia2_b ?ia1_b ?ia0_b
        ?p732_b ?p732_b ?p731_b ?p730_b ?p729_b ?p728_b ?p727_b ?p726_b ?p725_b ?p724_b ?p723_b ?p722_b ?p721_b ?p720_b ?p719_b ?p718_b ?p717_b ?p716_b ?p715_b ?p714_b ?p713_b ?p712_b ?p711_b ?p710_b ?p79_b ?p78_b ?p77_b ?p76_b ?p75_b ?p74_b ?p73_b ?p72_b ?p71_b
        ?p832_b ?p831_b ?p830_b ?p829_b ?p828_b ?p827_b ?p826_b ?p825_b ?p824_b ?p823_b ?p822_b ?p821_b ?p820_b ?p819_b ?p818_b ?p817_b ?p816_b ?p815_b ?p814_b ?p813_b ?p812_b ?p811_b ?p810_b ?p89_b ?p88_b ?p87_b ?p86_b ?p85_b ?p84_b ?p83_b ?p82_b ?p81_b ?p80_b)
    (booth_1
        ?i15_b ?i14_b ?i13_b ?i12_b ?i11_b ?i10_b ?i9_b ?i8_b ?i7_b ?i6_b ?i5_b ?i4_b ?i3_b ?i2_b ?i1_b ?i0_b
        ?ia15_b ?ia14_b ?ia13_b ?ia12_b ?ia11_b ?ia10_b ?ia9_b ?ia8_b ?ia7_b ?ia6_b ?ia5_b ?ia4_b ?ia3_b ?ia2_b ?ia1_b ?ia0_b
        ?p832_b ?p832_b ?p831_b ?p830_b ?p829_b ?p828_b ?p827_b ?p826_b ?p825_b ?p824_b ?p823_b ?p822_b ?p821_b ?p820_b ?p819_b ?p818_b ?p817_b ?p816_b ?p815_b ?p814_b ?p813_b ?p812_b ?p811_b ?p810_b ?p89_b ?p88_b ?p87_b ?p86_b ?p85_b ?p84_b ?p83_b ?p82_b ?p81_b
        ?p932_b ?p931_b ?p930_b ?p929_b ?p928_b ?p927_b ?p926_b ?p925_b ?p924_b ?p923_b ?p922_b ?p921_b ?p920_b ?p919_b ?p918_b ?p917_b ?p916_b ?p915_b ?p914_b ?p913_b ?p912_b ?p911_b ?p910_b ?p99_b ?p98_b ?p97_b ?p96_b ?p95_b ?p94_b ?p93_b ?p92_b ?p91_b ?p90_b)
    (booth_1
        ?i15_b ?i14_b ?i13_b ?i12_b ?i11_b ?i10_b ?i9_b ?i8_b ?i7_b ?i6_b ?i5_b ?i4_b ?i3_b ?i2_b ?i1_b ?i0_b
        ?ia15_b ?ia14_b ?ia13_b ?ia12_b ?ia11_b ?ia10_b ?ia9_b ?ia8_b ?ia7_b ?ia6_b ?ia5_b ?ia4_b ?ia3_b ?ia2_b ?ia1_b ?ia0_b
        ?p932_b ?p932_b ?p931_b ?p930_b ?p929_b ?p928_b ?p927_b ?p926_b ?p925_b ?p924_b ?p923_b ?p922_b ?p921_b ?p920_b ?p919_b ?p918_b ?p917_b ?p916_b ?p915_b ?p914_b ?p913_b ?p912_b ?p911_b ?p910_b ?p99_b ?p98_b ?p97_b ?p96_b ?p95_b ?p94_b ?p93_b ?p92_b ?p91_b
        ?pa32_b ?pa31_b ?pa30_b ?pa29_b ?pa28_b ?pa27_b ?pa26_b ?pa25_b ?pa24_b ?pa23_b ?pa22_b ?pa21_b ?pa20_b ?pa19_b ?pa18_b ?pa17_b ?pa16_b ?pa15_b ?pa14_b ?pa13_b ?pa12_b ?pa11_b ?pa10_b ?pa9_b ?pa8_b ?pa7_b ?pa6_b ?pa5_b ?pa4_b ?pa3_b ?pa2_b ?pa1_b ?pa0_b)
    (booth_1
        ?i15_b ?i14_b ?i13_b ?i12_b ?i11_b ?i10_b ?i9_b ?i8_b ?i7_b ?i6_b ?i5_b ?i4_b ?i3_b ?i2_b ?i1_b ?i0_b
        ?ia15_b ?ia14_b ?ia13_b ?ia12_b ?ia11_b ?ia10_b ?ia9_b ?ia8_b ?ia7_b ?ia6_b ?ia5_b ?ia4_b ?ia3_b ?ia2_b ?ia1_b ?ia0_b
        ?pa32_b ?pa32_b ?pa31_b ?pa30_b ?pa29_b ?pa28_b ?pa27_b ?pa26_b ?pa25_b ?pa24_b ?pa23_b ?pa22_b ?pa21_b ?pa20_b ?pa19_b ?pa18_b ?pa17_b ?pa16_b ?pa15_b ?pa14_b ?pa13_b ?pa12_b ?pa11_b ?pa10_b ?pa9_b ?pa8_b ?pa7_b ?pa6_b ?pa5_b ?pa4_b ?pa3_b ?pa2_b ?pa1_b
        ?pb32_b ?pb31_b ?pb30_b ?pb29_b ?pb28_b ?pb27_b ?pb26_b ?pb25_b ?pb24_b ?pb23_b ?pb22_b ?pb21_b ?pb20_b ?pb19_b ?pb18_b ?pb17_b ?pb16_b ?pb15_b ?pb14_b ?pb13_b ?pb12_b ?pb11_b ?pb10_b ?pb9_b ?pb8_b ?pb7_b ?pb6_b ?pb5_b ?pb4_b ?pb3_b ?pb2_b ?pb1_b ?pb0_b)
    (booth_1
        ?i15_b ?i14_b ?i13_b ?i12_b ?i11_b ?i10_b ?i9_b ?i8_b ?i7_b ?i6_b ?i5_b ?i4_b ?i3_b ?i2_b ?i1_b ?i0_b
        ?ia15_b ?ia14_b ?ia13_b ?ia12_b ?ia11_b ?ia10_b ?ia9_b ?ia8_b ?ia7_b ?ia6_b ?ia5_b ?ia4_b ?ia3_b ?ia2_b ?ia1_b ?ia0_b
        ?pb32_b ?pb32_b ?pb31_b ?pb30_b ?pb29_b ?pb28_b ?pb27_b ?pb26_b ?pb25_b ?pb24_b ?pb23_b ?pb22_b ?pb21_b ?pb20_b ?pb19_b ?pb18_b ?pb17_b ?pb16_b ?pb15_b ?pb14_b ?pb13_b ?pb12_b ?pb11_b ?pb10_b ?pb9_b ?pb8_b ?pb7_b ?pb6_b ?pb5_b ?pb4_b ?pb3_b ?pb2_b ?pb1_b
        ?pc32_b ?pc31_b ?pc30_b ?pc29_b ?pc28_b ?pc27_b ?pc26_b ?pc25_b ?pc24_b ?pc23_b ?pc22_b ?pc21_b ?pc20_b ?pc19_b ?pc18_b ?pc17_b ?pc16_b ?pc15_b ?pc14_b ?pc13_b ?pc12_b ?pc11_b ?pc10_b ?pc9_b ?pc8_b ?pc7_b ?pc6_b ?pc5_b ?pc4_b ?pc3_b ?pc2_b ?pc1_b ?pc0_b)
    (booth_1
        ?i15_b ?i14_b ?i13_b ?i12_b ?i11_b ?i10_b ?i9_b ?i8_b ?i7_b ?i6_b ?i5_b ?i4_b ?i3_b ?i2_b ?i1_b ?i0_b
        ?ia15_b ?ia14_b ?ia13_b ?ia12_b ?ia11_b ?ia10_b ?ia9_b ?ia8_b ?ia7_b ?ia6_b ?ia5_b ?ia4_b ?ia3_b ?ia2_b ?ia1_b ?ia0_b
        ?pc32_b ?pc32_b ?pc31_b ?pc30_b ?pc29_b ?pc28_b ?pc27_b ?pc26_b ?pc25_b ?pc24_b ?pc23_b ?pc22_b ?pc21_b ?pc20_b ?pc19_b ?pc18_b ?pc17_b ?pc16_b ?pc15_b ?pc14_b ?pc13_b ?pc12_b ?pc11_b ?pc10_b ?pc9_b ?pc8_b ?pc7_b ?pc6_b ?pc5_b ?pc4_b ?pc3_b ?pc2_b ?pc1_b
        ?pd32_b ?pd31_b ?pd30_b ?pd29_b ?pd28_b ?pd27_b ?pd26_b ?pd25_b ?pd24_b ?pd23_b ?pd22_b ?pd21_b ?pd20_b ?pd19_b ?pd18_b ?pd17_b ?pd16_b ?pd15_b ?pd14_b ?pd13_b ?pd12_b ?pd11_b ?pd10_b ?pd9_b ?pd8_b ?pd7_b ?pd6_b ?pd5_b ?pd4_b ?pd3_b ?pd2_b ?pd1_b ?pd0_b)
    (booth_1
        ?i15_b ?i14_b ?i13_b ?i12_b ?i11_b ?i10_b ?i9_b ?i8_b ?i7_b ?i6_b ?i5_b ?i4_b ?i3_b ?i2_b ?i1_b ?i0_b
        ?ia15_b ?ia14_b ?ia13_b ?ia12_b ?ia11_b ?ia10_b ?ia9_b ?ia8_b ?ia7_b ?ia6_b ?ia5_b ?ia4_b ?ia3_b ?ia2_b ?ia1_b ?ia0_b
        ?pd32_b ?pd32_b ?pd31_b ?pd30_b ?pd29_b ?pd28_b ?pd27_b ?pd26_b ?pd25_b ?pd24_b ?pd23_b ?pd22_b ?pd21_b ?pd20_b ?pd19_b ?pd18_b ?pd17_b ?pd16_b ?pd15_b ?pd14_b ?pd13_b ?pd12_b ?pd11_b ?pd10_b ?pd9_b ?pd8_b ?pd7_b ?pd6_b ?pd5_b ?pd4_b ?pd3_b ?pd2_b ?pd1_b
        ?pe32_b ?pe31_b ?pe30_b ?pe29_b ?pe28_b ?pe27_b ?pe26_b ?pe25_b ?pe24_b ?pe23_b ?pe22_b ?pe21_b ?pe20_b ?pe19_b ?pe18_b ?pe17_b ?pe16_b ?pe15_b ?pe14_b ?pe13_b ?pe12_b ?pe11_b ?pe10_b ?pe9_b ?pe8_b ?pe7_b ?pe6_b ?pe5_b ?pe4_b ?pe3_b ?pe2_b ?pe1_b ?pe0_b)
    (booth_1
        ?i15_b ?i14_b ?i13_b ?i12_b ?i11_b ?i10_b ?i9_b ?i8_b ?i7_b ?i6_b ?i5_b ?i4_b ?i3_b ?i2_b ?i1_b ?i0_b
        ?ia15_b ?ia14_b ?ia13_b ?ia12_b ?ia11_b ?ia10_b ?ia9_b ?ia8_b ?ia7_b ?ia6_b ?ia5_b ?ia4_b ?ia3_b ?ia2_b ?ia1_b ?ia0_b
        ?pe32_b ?pe32_b ?pe31_b ?pe30_b ?pe29_b ?pe28_b ?pe27_b ?pe26_b ?pe25_b ?pe24_b ?pe23_b ?pe22_b ?pe21_b ?pe20_b ?pe19_b ?pe18_b ?pe17_b ?pe16_b ?pe15_b ?pe14_b ?pe13_b ?pe12_b ?pe11_b ?pe10_b ?pe9_b ?pe8_b ?pe7_b ?pe6_b ?pe5_b ?pe4_b ?pe3_b ?pe2_b ?pe1_b
        ?pf32_b ?pf31_b ?pf30_b ?pf29_b ?pf28_b ?pf27_b ?pf26_b ?pf25_b ?pf24_b ?pf23_b ?pf22_b ?pf21_b ?pf20_b ?pf19_b ?pf18_b ?pf17_b ?pf16_b ?pf15_b ?pf14_b ?pf13_b ?pf12_b ?pf11_b ?pf10_b ?pf9_b ?pf8_b ?pf7_b ?pf6_b ?pf5_b ?pf4_b ?pf3_b ?pf2_b ?pf1_b ?pf0_b)
    (conv_radix ?pf17_b ?pf16_b ?pf15_b ?pf14_b ?pf13_b ?pf12_b ?pf11_b ?pf10_b ?pf9_b ?pf8_b ?pf7_b ?pf6_b ?pf5_b ?pf4_b ?pf3_b ?pf2_b ?p3 ?p2 ?p1 ?p0)
    (zero_b ?pf32_b ?pf32_b ?pf31_b ?pf30_b ?pf29_b ?pf28_b ?pf27_b ?pf26_b ?pf25_b ?pf24_b ?pf23_b ?pf22_b ?pf21_b ?pf20_b ?pf19_b ?pf18_b ?zero)
    (_not ?zero ?overflow))

;(<= (booth_2
;        ?a32_b ?a31_b ?a30_b ?a29_b ?a28_b ?a27_b ?a26_b ?a25_b ?a24_b ?a23_b ?a22_b ?a21_b ?a20_b ?a19_b ?a18_b ?a17_b
;        ?s32_b ?s31_b ?s30_b ?s29_b ?s28_b ?s27_b ?s26_b ?s25_b ?s24_b ?s23_b ?s22_b ?s21_b ?s20_b ?s19_b ?s18_b ?s17_b
;        ?p32_b ?p31_b ?p30_b ?p29_b ?p28_b ?p27_b ?p26_b ?p25_b ?p24_b ?p23_b ?p22_b ?p21_b ?p20_b ?p19_b ?p18_b ?p17_b ?p16_b ?p15_b ?p14_b ?p13_b ?p12_b ?p11_b ?p10_b ?p9_b ?p8_b ?p7_b ?p6_b ?p5_b ?p4_b ?p3_b ?p2_b ?p1_b ?p0_b
;        0
;        ?o32_b ?o31_b ?o30_b ?o29_b ?o28_b ?o27_b ?o26_b ?o25_b ?o24_b ?o23_b ?o22_b ?o21_b ?o20_b ?o19_b ?o18_b ?o17_b ?o16_b ?o15_b ?o14_b ?o13_b ?o12_b ?o11_b ?o10_b ?o9_b ?o8_b ?o7_b ?o6_b ?o5_b ?o4_b ?o3_b ?o2_b ?o1_b ?o0_b)
;    (booth_1
;        ?a32_b ?a31_b ?a30_b ?a29_b ?a28_b ?a27_b ?a26_b ?a25_b ?a24_b ?a23_b ?a22_b ?a21_b ?a20_b ?a19_b ?a18_b ?a17_b
;        ?s32_b ?s31_b ?s30_b ?s29_b ?s28_b ?s27_b ?s26_b ?s25_b ?s24_b ?s23_b ?s22_b ?s21_b ?s20_b ?s19_b ?s18_b ?s17_b
;        ?p32_b ?p31_b ?p30_b ?p29_b ?p28_b ?p27_b ?p26_b ?p25_b ?p24_b ?p23_b ?p22_b ?p21_b ?p20_b ?p19_b ?p18_b ?p17_b ?p16_b ?p15_b ?p14_b ?p13_b ?p12_b ?p11_b ?p10_b ?p9_b ?p8_b ?p7_b ?p6_b ?p5_b ?p4_b ?p3_b ?p2_b ?p1_b ?p0_b
;        ?o32_b ?o31_b ?o30_b ?o29_b ?o28_b ?o27_b ?o26_b ?o25_b ?o24_b ?o23_b ?o22_b ?o21_b ?o20_b ?o19_b ?o18_b ?o17_b ?o16_b ?o15_b ?o14_b ?o13_b ?o12_b ?o11_b ?o10_b ?o9_b ?o8_b ?o7_b ?o6_b ?o5_b ?o4_b ?o3_b ?o2_b ?o1_b ?o0_b))

;(<= (booth_2
;        ?a32_b ?a31_b ?a30_b ?a29_b ?a28_b ?a27_b ?a26_b ?a25_b ?a24_b ?a23_b ?a22_b ?a21_b ?a20_b ?a19_b ?a18_b ?a17_b
;        ?s32_b ?s31_b ?s30_b ?s29_b ?s28_b ?s27_b ?s26_b ?s25_b ?s24_b ?s23_b ?s22_b ?s21_b ?s20_b ?s19_b ?s18_b ?s17_b
;        ?p32_b ?p31_b ?p30_b ?p29_b ?p28_b ?p27_b ?p26_b ?p25_b ?p24_b ?p23_b ?p22_b ?p21_b ?p20_b ?p19_b ?p18_b ?p17_b ?p16_b ?p15_b ?p14_b ?p13_b ?p12_b ?p11_b ?p10_b ?p9_b ?p8_b ?p7_b ?p6_b ?p5_b ?p4_b ?p3_b ?p2_b ?p1_b ?p0_b
;        ?n
;        ?o32_b ?o31_b ?o30_b ?o29_b ?o28_b ?o27_b ?o26_b ?o25_b ?o24_b ?o23_b ?o22_b ?o21_b ?o20_b ?o19_b ?o18_b ?o17_b ?o16_b ?o15_b ?o14_b ?o13_b ?o12_b ?o11_b ?o10_b ?o9_b ?o8_b ?o7_b ?o6_b ?o5_b ?o4_b ?o3_b ?o2_b ?o1_b ?o0_b)
;    (succi ?nm ?n)
;    (booth_1
;        ?a32_b ?a31_b ?a30_b ?a29_b ?a28_b ?a27_b ?a26_b ?a25_b ?a24_b ?a23_b ?a22_b ?a21_b ?a20_b ?a19_b ?a18_b ?a17_b
;        ?s32_b ?s31_b ?s30_b ?s29_b ?s28_b ?s27_b ?s26_b ?s25_b ?s24_b ?s23_b ?s22_b ?s21_b ?s20_b ?s19_b ?s18_b ?s17_b
;        ?p32_b ?p31_b ?p30_b ?p29_b ?p28_b ?p27_b ?p26_b ?p25_b ?p24_b ?p23_b ?p22_b ?p21_b ?p20_b ?p19_b ?p18_b ?p17_b ?p16_b ?p15_b ?p14_b ?p13_b ?p12_b ?p11_b ?p10_b ?p9_b ?p8_b ?p7_b ?p6_b ?p5_b ?p4_b ?p3_b ?p2_b ?p1_b ?p0_b
;        ?o32_b ?o31_b ?o30_b ?o29_b ?o28_b ?o27_b ?o26_b ?o25_b ?o24_b ?o23_b ?o22_b ?o21_b ?o20_b ?o19_b ?o18_b ?o17_b ?o16_b ?o15_b ?o14_b ?o13_b ?o12_b ?o11_b ?o10_b ?o9_b ?o8_b ?o7_b ?o6_b ?o5_b ?o4_b ?o3_b ?o2_b ?o1_b ?o0_b)
;    (booth_2
;        ?a32_b ?a31_b ?a30_b ?a29_b ?a28_b ?a27_b ?a26_b ?a25_b ?a24_b ?a23_b ?a22_b ?a21_b ?a20_b ?a19_b ?a18_b ?a17_b
;        ?s32_b ?s31_b ?s30_b ?s29_b ?s28_b ?s27_b ?s26_b ?s25_b ?s24_b ?s23_b ?s22_b ?s21_b ?s20_b ?s19_b ?s18_b ?s17_b
;        o ?o32_b ?o31_b ?o30_b ?o29_b ?o28_b ?o27_b ?o26_b ?o25_b ?o24_b ?o23_b ?o22_b ?o21_b ?o20_b ?o19_b ?o18_b ?o17_b ?o16_b ?o15_b ?o14_b ?o13_b ?o12_b ?o11_b ?o10_b ?o9_b ?o8_b ?o7_b ?o6_b ?o5_b ?o4_b ?o3_b ?o2_b ?o1_b
;        ?nm
;        ?om32_b ?om31_b ?om30_b ?om29_b ?om28_b ?om27_b ?om26_b ?om25_b ?om24_b ?om23_b ?om22_b ?om21_b ?om20_b ?om19_b ?om18_b ?om17_b ?om16_b ?om15_b ?om14_b ?om13_b ?om12_b ?om11_b ?om10_b ?om9_b ?om8_b ?om7_b ?om6_b ?om5_b ?om4_b ?om3_b ?om2_b ?om1_b ?om0_b))

(<= (booth_1
        ?a32_b ?a31_b ?a30_b ?a29_b ?a28_b ?a27_b ?a26_b ?a25_b ?a24_b ?a23_b ?a22_b ?a21_b ?a20_b ?a19_b ?a18_b ?a17_b
        ?s32_b ?s31_b ?s30_b ?s29_b ?s28_b ?s27_b ?s26_b ?s25_b ?s24_b ?s23_b ?s22_b ?s21_b ?s20_b ?s19_b ?s18_b ?s17_b
        ?p32_b ?p31_b ?p30_b ?p29_b ?p28_b ?p27_b ?p26_b ?p25_b ?p24_b ?p23_b ?p22_b ?p21_b ?p20_b ?p19_b ?p18_b ?p17_b ?p16_b ?p15_b ?p14_b ?p13_b ?p12_b ?p11_b ?p10_b ?p9_b ?p8_b ?p7_b ?p6_b ?p5_b ?p4_b ?p3_b ?p2_b o i
        ?o32_b ?o31_b ?o30_b ?o29_b ?o28_b ?o27_b ?o26_b ?o25_b ?o24_b ?o23_b ?o22_b ?o21_b ?o20_b ?o19_b ?o18_b ?o17_b ?p16_b ?p15_b ?p14_b ?p13_b ?p12_b ?p11_b ?p10_b ?p9_b ?p8_b ?p7_b ?p6_b ?p5_b ?p4_b ?p3_b ?p2_b o i)
    (plus_b
        ?p32_b ?p31_b ?p30_b ?p29_b ?p28_b ?p27_b ?p26_b ?p25_b ?p24_b ?p23_b ?p22_b ?p21_b ?p20_b ?p19_b ?p18_b ?p17_b
        ?a32_b ?a31_b ?a30_b ?a29_b ?a28_b ?a27_b ?a26_b ?a25_b ?a24_b ?a23_b ?a22_b ?a21_b ?a20_b ?a19_b ?a18_b ?a17_b
        o
        ?o32_b ?o31_b ?o30_b ?o29_b ?o28_b ?o27_b ?o26_b ?o25_b ?o24_b ?o23_b ?o22_b ?o21_b ?o20_b ?o19_b ?o18_b ?o17_b
        ?overflow)
    (num_b ?s32_b ?s31_b ?s30_b ?s29_b ?s28_b ?s27_b ?s26_b ?s25_b ?s24_b ?s23_b ?s22_b ?s21_b ?s20_b ?s19_b ?s18_b ?s17_b)
    (num_b ?p16_b ?p15_b ?p14_b ?p13_b ?p12_b ?p11_b ?p10_b ?p9_b ?p8_b ?p7_b ?p6_b ?p5_b ?p4_b ?p3_b ?p2_b o))

(<= (booth_1
        ?a32_b ?a31_b ?a30_b ?a29_b ?a28_b ?a27_b ?a26_b ?a25_b ?a24_b ?a23_b ?a22_b ?a21_b ?a20_b ?a19_b ?a18_b ?a17_b
        ?s32_b ?s31_b ?s30_b ?s29_b ?s28_b ?s27_b ?s26_b ?s25_b ?s24_b ?s23_b ?s22_b ?s21_b ?s20_b ?s19_b ?s18_b ?s17_b
        ?p32_b ?p31_b ?p30_b ?p29_b ?p28_b ?p27_b ?p26_b ?p25_b ?p24_b ?p23_b ?p22_b ?p21_b ?p20_b ?p19_b ?p18_b ?p17_b ?p16_b ?p15_b ?p14_b ?p13_b ?p12_b ?p11_b ?p10_b ?p9_b ?p8_b ?p7_b ?p6_b ?p5_b ?p4_b ?p3_b ?p2_b i o
        ?o32_b ?o31_b ?o30_b ?o29_b ?o28_b ?o27_b ?o26_b ?o25_b ?o24_b ?o23_b ?o22_b ?o21_b ?o20_b ?o19_b ?o18_b ?o17_b ?p16_b ?p15_b ?p14_b ?p13_b ?p12_b ?p11_b ?p10_b ?p9_b ?p8_b ?p7_b ?p6_b ?p5_b ?p4_b ?p3_b ?p2_b i o)
    (plus_b
        ?p32_b ?p31_b ?p30_b ?p29_b ?p28_b ?p27_b ?p26_b ?p25_b ?p24_b ?p23_b ?p22_b ?p21_b ?p20_b ?p19_b ?p18_b ?p17_b
        ?s32_b ?s31_b ?s30_b ?s29_b ?s28_b ?s27_b ?s26_b ?s25_b ?s24_b ?s23_b ?s22_b ?s21_b ?s20_b ?s19_b ?s18_b ?s17_b
        o
        ?o32_b ?o31_b ?o30_b ?o29_b ?o28_b ?o27_b ?o26_b ?o25_b ?o24_b ?o23_b ?o22_b ?o21_b ?o20_b ?o19_b ?o18_b ?o17_b
        ?overflow)
    (num_b ?a32_b ?a31_b ?a30_b ?a29_b ?a28_b ?a27_b ?a26_b ?a25_b ?a24_b ?a23_b ?a22_b ?a21_b ?a20_b ?a19_b ?a18_b ?a17_b)
    (num_b ?p16_b ?p15_b ?p14_b ?p13_b ?p12_b ?p11_b ?p10_b ?p9_b ?p8_b ?p7_b ?p6_b ?p5_b ?p4_b ?p3_b ?p2_b i))

(<= (booth_1
        ?a32_b ?a31_b ?a30_b ?a29_b ?a28_b ?a27_b ?a26_b ?a25_b ?a24_b ?a23_b ?a22_b ?a21_b ?a20_b ?a19_b ?a18_b ?a17_b
        ?s32_b ?s31_b ?s30_b ?s29_b ?s28_b ?s27_b ?s26_b ?s25_b ?s24_b ?s23_b ?s22_b ?s21_b ?s20_b ?s19_b ?s18_b ?s17_b
        ?p32_b ?p31_b ?p30_b ?p29_b ?p28_b ?p27_b ?p26_b ?p25_b ?p24_b ?p23_b ?p22_b ?p21_b ?p20_b ?p19_b ?p18_b ?p17_b ?p16_b ?p15_b ?p14_b ?p13_b ?p12_b ?p11_b ?p10_b ?p9_b ?p8_b ?p7_b ?p6_b ?p5_b ?p4_b ?p3_b ?p2_b ?p1_b ?p0_b
        ?p32_b ?p31_b ?p30_b ?p29_b ?p28_b ?p27_b ?p26_b ?p25_b ?p24_b ?p23_b ?p22_b ?p21_b ?p20_b ?p19_b ?p18_b ?p17_b ?p16_b ?p15_b ?p14_b ?p13_b ?p12_b ?p11_b ?p10_b ?p9_b ?p8_b ?p7_b ?p6_b ?p5_b ?p4_b ?p3_b ?p2_b ?p1_b ?p0_b)
    (_xor ?p1_b ?p0_b o)
    (num_b ?a32_b ?a31_b ?a30_b ?a29_b ?a28_b ?a27_b ?a26_b ?a25_b ?a24_b ?a23_b ?a22_b ?a21_b ?a20_b ?a19_b ?a18_b ?a17_b)
    (num_b ?s32_b ?s31_b ?s30_b ?s29_b ?s28_b ?s27_b ?s26_b ?s25_b ?s24_b ?s23_b ?s22_b ?s21_b ?s20_b ?s19_b ?s18_b ?s17_b)
    (num_b ?p32_b ?p31_b ?p30_b ?p29_b ?p28_b ?p27_b ?p26_b ?p25_b ?p24_b ?p23_b ?p22_b ?p21_b ?p20_b ?p19_b ?p18_b ?p17_b)
    (num_b ?p16_b ?p15_b ?p14_b ?p13_b ?p12_b ?p11_b ?p10_b ?p9_b ?p8_b ?p7_b ?p6_b ?p5_b ?p4_b ?p3_b ?p2_b ?p1_b))

; final recursion
(<= (booth ?a7 ?a6 ?a5 ?a4 ?a3 ?a2 ?a1 ?a0 ?a_lsb ?s7 ?s6 ?s5 ?s4 ?s3 ?s2 ?s1 ?s0 ?s_lsb ?p7 ?p6 ?p5 ?p4 ?p3 ?p2 ?p1 ?p0 ?p_lsb 0 0 ?p3 ?p2 ?p1 ?p0 ?overflow)
    (zero ?p7 ?p6 ?p5 ?p4 ?zero)
    (_not ?zero ?overflow)
    (num ?a7 ?a6 ?a5 ?a4)
    (num ?a3 ?a2 ?a1 ?a0)
    (binary ?a_lsb)
    (num ?s7 ?s6 ?s5 ?s4)
    (num ?s3 ?s2 ?s1 ?s0)
    (num ?p3 ?p2 ?p1 ?p0)
    (binary ?s_lsb)
    (binary ?p_lsb))

; p1p0 == oi
(<= (booth ?a7 ?a6 ?a5 ?a4 ?a3 ?a2 ?a1 ?a0 ?a_lsb ?s7 ?s6 ?s5 ?s4 ?s3 ?s2 ?s1 ?s0 ?s_lsb ?p7 ?p6 ?p5 ?p4 ?p3 ?p2 ?p1 ?p0 i ?i1 ?i0 ?pk3 ?pk2 ?pk1 ?pk0 ?overflow)
    (succ 0 0 0 ?im 0 0 ?i1 ?i0)
    (even_num ?p3 ?p2 ?p1 ?p0)
    (_and i ?a_lsb ?p0c)
    (plus_ ?p3 ?p2 ?p1 ?p0 ?a3 ?a2 ?a1 ?a0 ?p0c ?pi3 ?pi2 ?pi1 ?pi0 ?p4c)
    (plus_ ?p7 ?p6 ?p5 ?p4 ?a7 ?a6 ?a5 ?a4 ?p4c ?pi7 ?pi6 ?pi5 ?pi4 ?p8c)
    (conv_radix ?pi15_b ?pi14_b ?pi13_b ?pi12_b ?pi11_b ?pi10_b ?pi9_b ?pi8_b ?pi7_b ?pi6_b ?pi5_b ?pi4_b ?pi3_b ?pi2_b ?pi1_b ?pi0_b ?pi3 ?pi2 ?pi1 ?pi0)
    (conv_radix ?pi31_b ?pi30_b ?pi29_b ?pi28_b ?pi27_b ?pi26_b ?pi25_b ?pi24_b ?pi23_b ?pi22_b ?pi21_b ?pi20_b ?pi19_b ?pi18_b ?pi17_b ?pi16_b ?pi7 ?pi6 ?pi5 ?pi4)
    (conv_radix o ?pi31_b ?pi30_b ?pi29_b ?pi28_b ?pi27_b ?pi26_b ?pi25_b ?pi24_b ?pi23_b ?pi22_b ?pi21_b ?pi20_b ?pi19_b ?pi18_b ?pi17_b ?pj7 ?pj6 ?pj5 ?pj4)
    (conv_radix ?pi16_b ?pi15_b ?pi14_b ?pi13_b ?pi12_b ?pi11_b ?pi10_b ?pi9_b ?pi8_b ?pi7_b ?pi6_b ?pi5_b ?pi4_b ?pi3_b ?pi2_b ?pi1_b ?pj3 ?pj2 ?pj1 ?pj0)
    (booth ?a7 ?a6 ?a5 ?a4 ?a3 ?a2 ?a1 ?a0 ?a_lsb ?s7 ?s6 ?s5 ?s4 ?s3 ?s2 ?s1 ?s0 ?s_lsb ?pj7 ?pj6 ?pj5 ?pj4 ?pj3 ?pj2 ?pj1 ?pj0 ?pi0_b 0 ?im ?pk3 ?pk2 ?pk1 ?pk0 ?overflow))

; p1p0 = io
(<= (booth ?a7 ?a6 ?a5 ?a4 ?a3 ?a2 ?a1 ?a0 ?a_lsb ?s7 ?s6 ?s5 ?s4 ?s3 ?s2 ?s1 ?s0 ?s_lsb ?p7 ?p6 ?p5 ?p4 ?p3 ?p2 ?p1 ?p0 o ?i1 ?i0 ?pk3 ?pk2 ?pk1 ?pk0 ?overflow)
    (succ 0 0 0 ?im 0 0 ?i1 ?i0)
    (odd_num ?p3 ?p2 ?p1 ?p0)
    (plus_ ?p3 ?p2 ?p1 ?p0 ?s3 ?s2 ?s1 ?s0 o ?pi3 ?pi2 ?pi1 ?pi0 ?p4c)
    (plus_ ?p7 ?p6 ?p5 ?p4 ?s7 ?s6 ?s5 ?s4 ?p4c ?pi7 ?pi6 ?pi5 ?pi4 ?p8c)
    (conv_radix ?pi15_b ?pi14_b ?pi13_b ?pi12_b ?pi11_b ?pi10_b ?pi9_b ?pi8_b ?pi7_b ?pi6_b ?pi5_b ?pi4_b ?pi3_b ?pi2_b ?pi1_b ?pi0_b ?pi3 ?pi2 ?pi1 ?pi0)
    (conv_radix ?pi31_b ?pi30_b ?pi29_b ?pi28_b ?pi27_b ?pi26_b ?pi25_b ?pi24_b ?pi23_b ?pi22_b ?pi21_b ?pi20_b ?pi19_b ?pi18_b ?pi17_b ?pi16_b ?pi7 ?pi6 ?pi5 ?pi4)
    (conv_radix o ?pi31_b ?pi30_b ?pi29_b ?pi28_b ?pi27_b ?pi26_b ?pi25_b ?pi24_b ?pi23_b ?pi22_b ?pi21_b ?pi20_b ?pi19_b ?pi18_b ?pi17_b ?pj7 ?pj6 ?pj5 ?pj4)
    (conv_radix ?pi16_b ?pi15_b ?pi14_b ?pi13_b ?pi12_b ?pi11_b ?pi10_b ?pi9_b ?pi8_b ?pi7_b ?pi6_b ?pi5_b ?pi4_b ?pi3_b ?pi2_b ?pi1_b ?pj3 ?pj2 ?pj1 ?pj0)
    (booth ?a7 ?a6 ?a5 ?a4 ?a3 ?a2 ?a1 ?a0 ?a_lsb ?s7 ?s6 ?s5 ?s4 ?s3 ?s2 ?s1 ?s0 ?s_lsb ?pj7 ?pj6 ?pj5 ?pj4 ?pj3 ?pj2 ?pj1 ?pj0 ?pi0_b 0 ?im ?pk3 ?pk2 ?pk1 ?pk0 ?overflow))

; p1p0 = oo or p1p0 == ii
(<= (booth ?a7 ?a6 ?a5 ?a4 ?a3 ?a2 ?a1 ?a0 ?a_lsb ?s7 ?s6 ?s5 ?s4 ?s3 ?s2 ?s1 ?s0 ?s_lsb ?p7 ?p6 ?p5 ?p4 ?p3 ?p2 ?p1 ?p0 ?p_lsb ?i1 ?i0 ?pk3 ?pk2 ?pk1 ?pk0 ?overflow)
    (succ 0 0 0 ?im 0 0 ?i1 ?i0)
    (conv_radix ?p15_b ?p14_b ?p13_b ?p12_b ?p11_b ?p10_b ?p9_b ?p8_b ?p7_b ?p6_b ?p5_b ?p4_b ?p3_b ?p2_b ?p1_b ?p0_b ?p3 ?p2 ?p1 ?p0)
    (_xor ?p0_b ?p_lsb o)
    (conv_radix ?p31_b ?p30_b ?p29_b ?p28_b ?p27_b ?p26_b ?p25_b ?p24_b ?p23_b ?p22_b ?p21_b ?p20_b ?p19_b ?p18_b ?p17_b ?p16_b ?p7 ?p6 ?p5 ?p4)
    (conv_radix o ?p31_b ?p30_b ?p29_b ?p28_b ?p27_b ?p26_b ?p25_b ?p24_b ?p23_b ?p22_b ?p21_b ?p20_b ?p19_b ?p18_b ?p17_b ?pj7 ?pj6 ?pj5 ?pj4)
    (conv_radix ?p16_b ?p15_b ?p14_b ?p13_b ?p12_b ?p11_b ?p10_b ?p9_b ?p8_b ?p7_b ?p6_b ?p5_b ?p4_b ?p3_b ?p2_b ?p1_b ?pj3 ?pj2 ?pj1 ?pj0)
    (booth ?a7 ?a6 ?a5 ?a4 ?a3 ?a2 ?a1 ?a0 ?a_lsb ?s7 ?s6 ?s5 ?s4 ?s3 ?s2 ?s1 ?s0 ?s_lsb ?pj7 ?pj6 ?pj5 ?pj4 ?pj3 ?pj2 ?pj1 ?pj0 ?p0_b 0 ?im ?pk3 ?pk2 ?pk1 ?pk0 ?overflow))

;(<= (mul ?i3 ?i2 ?i1 ?i0 0 0 0 0 0 0 0 0)
;    (num ?i3 ?i2 ?i1 ?i0))
;(<= (mul ?i3 ?i2 ?i1 ?i0 ?ip3 ?ip2 ?ip1 ?ip0 ?i3 ?i2 ?i1 ?i0)
;    (succ ?i3 ?i2 ?i1 ?i0 ?ip3 ?ip2 ?ip1 ?ip0))
;(<= (mul ?i3 ?i2 ?i1 ?i0 ?ipp3 ?ipp2 ?ipp1 ?ipp0 ?id3 ?id2 ?id1 ?id0)
;    (plus ?i3 ?i2 ?i1 ?i0 ?i3 ?i2 ?i1 ?i0 ?id3 ?id2 ?id1 ?id0)
;    (succ ?i3 ?i2 ?i1 ?i0 ?ip3 ?ip2 ?ip1 ?ip0)
;    (succ ?ip3 ?ip2 ?ip1 ?ip0 ?ipp3 ?ipp2 ?ipp1 ?ipp0))
;(<= (mul ?i3 ?i2 ?i1 ?i0 ?j3 ?j2 ?j1 ?j0 ?s3 ?s2 ?s1 ?s0)
;    (plus ?i3 ?i2 ?i1 ?i0 ?jp3 ?jp2 ?jp1 ?jp0 ?sa3 ?sa2 ?sa1 ?sa0)
;    (plus ?s3 ?s2 ?s1 ?s0 ?i3 ?i2 ?i1 ?i0 ?sa3 ?sa2 ?sa1 ?sa0)
;    (succ ?j3 ?j2 ?j1 ?j0 ?jp3 ?jp2 ?jp1 ?jp0))

;;; ここまで実装済み

;; i / j = s
(<= (div ?i3 ?i2 ?i1 ?i0 ?j3 ?j2 ?j1 ?j0 ?s3 ?s2 ?s1 ?s0)
    (mul ?j3 ?j2 ?j1 ?j0 ?s3 ?s2 ?s1 ?s0 ?q3 ?q2 ?q1 ?q0)
    (plus ?q3 ?q2 ?q1 ?q0 ?r3 ?r2 ?r1 ?r0 ?i3 ?i2 ?i1 ?i0)
    (not(nan ?r3 ?r2 ?r1 ?r0))
    (lt ?r3 ?r2 ?r1 ?r0 ?s3 ?s2 ?s1 ?s0)
    (not(minnum ?j3 ?j2 ?j1 ?j0)))
(<= (div ?i3 ?i2 ?i1 ?i0 0 0 0 0 nan nan nan nan)
    (num ?i3 ?i2 ?i1 ?i0))

;; i % j = r
(<= (rem ?i3 ?i2 ?i1 ?i0 ?j3 ?j2 ?j1 ?j0 ?r3 ?r2 ?r1 ?r0)
    (mul ?j3 ?j2 ?j1 ?j0 ?s3 ?s2 ?s1 ?s0 ?q3 ?q2 ?q1 ?q0)
    (plus ?q3 ?q2 ?q1 ?q0 ?r3 ?r2 ?r1 ?r0 ?i3 ?i2 ?i1 ?i0)
    (not(nan ?r3 ?r2 ?r1 ?r0))
    (lt ?r3 ?r2 ?r1 ?r0 ?s3 ?s2 ?s1 ?s0)
    (not(minnum ?j3 ?j2 ?j1 ?j0)))
(<= (rem ?i3 ?i2 ?i1 ?i0 0 0 0 0 nan nan nan nan)
    (num ?i3 ?i2 ?i1 ?i0))

